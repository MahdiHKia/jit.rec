"""
Django settings for jit_rec_backend project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from os import environ
from pathlib import Path
from urllib.parse import urlparse

import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = environ.get("SECRET_KEY", "insecure_key")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = environ.get("DEBUG", "true").lower() == "true"

SSL_ENABLED = environ.get("SSL_ENABLED", "false").lower() == "true"
HTTP_PROTOCOL = "https://" if SSL_ENABLED else "http://"

BACKEND_BASE_URL = f'{HTTP_PROTOCOL}{environ.get("BACKEND_HOST")}'
FRONTEND_BASE_URL = f'{HTTP_PROTOCOL}{environ.get("FRONTEND_HOST")}'
RTMP_SERVER_BASE_URL = f'rtmp://{environ.get("RTMP_HOST")}:{environ.get("RTMP_PORT")}'

ALLOWED_HOSTS = [
    f".{urlparse(BACKEND_BASE_URL).hostname}",
]


CORS_ALLOWED_ORIGINS = [
    FRONTEND_BASE_URL,
]
CORS_ALLOW_CREDENTIALS = True

CSRF_COOKIE_DOMAIN = f".{urlparse(FRONTEND_BASE_URL).hostname}"
CSRF_COOKIE_NAME = "X-JR_CSRFTOKEN"
SESSION_COOKIE_NAME = "JR_sessionid"
# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "drf_spectacular",
    "corsheaders",
    "mptt",
    "jit_rec_auth",
    "dashboard",
    "rtmp_recorder",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "jit_rec_backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "jit_rec_backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": dj_database_url.config(default=environ.get("DEFAULT_DATABASE_URL", "sqlite:///db.sqlite3"))
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTH_USER_MODEL = "jit_rec_auth.JitRecUser"


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = "statics"
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {"format": "[%(levelname)s] [PID %(process)d] [%(asctime)s] [%(module)s] :: %(message)s"},
    },
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "verbose",
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "INFO",
    },
}

RECORDINGS_PATH = BASE_DIR / "data/recordings"
RECORD_TOKEN_TTL_MINUTES = int(environ.get("RECORD_TOKEN_TTL_MINUTES", 60 * 24))
